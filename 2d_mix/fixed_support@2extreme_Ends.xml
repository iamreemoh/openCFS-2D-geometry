<?xml version="1.0" encoding="UTF-8"?>
<cfsSimulation xmlns="http://www.cfs++.org/simulation" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://www.cfs++.org/simulation 
  https://opencfs.gitlab.io/cfs/xml/CFS-Simulation/CFS.xsd">
  <fileFormats>
    <output>
      <hdf5 directory="."/>
      <info/>
    </output>
    <materialData file="mat.xml" format="xml" />
  </fileFormats>

  <domain geometryType="plane">
    <regionList>
      <region material="99lines" name="mech" />
      <region material="99lines" name="solid" />
    </regionList>
    <nodeList>
    <nodes name="left_support_point">
      <coord x="0" y="2.5" />
    </nodes>
    <!-- <nodes name="central_support_point">
      <coord x="15" y="2.5" />
    </nodes> -->
    <nodes name="right_support_point">
      <coord x="30" y="2.5" />
    </nodes>
    <!-- <nodes name="box_curve">
      <coord />
    </nodes> -->
    </nodeList>
  </domain>

  <sequenceStep index="1">
    <analysis>
      <static/>
    </analysis>

    <pdeList>
      <mechanic subType="planeStress">
        <regionList>
          <region name="mech" />
          <region name="solid" />
        </regionList>

        <bcsAndLoads>
            <!-- <fix name="casing">
              <comp dof="x"/>
              <comp dof="y" />
           </fix> -->
           <fix name="left_support_point">
              <comp dof="x"/>
              <comp dof="y" />
           </fix>
           <!-- <fix name="central_support_point">
              <comp dof="x"/>
              <comp dof="y"/>
           </fix> -->
           <fix name="right_support_point">
              <comp dof="x"/>
              <comp dof="y"/>
           </fix>
           <!-- <force name="box_curve" >
             <comp dof="y" 
                   value="(-7.954e+03 * sin(1.883 * x + -4.117) 
                         + 1.372e+06 * cos(1.014 * x + 1.117) 
                         + 6.848e+03 * sin(2.125 * x + -7.028) 
                         + 1.366e+06 * cos(1.017 * x + 4.221) 
                         + 1.607e+05 
                         - 2.980e+04 * x 
                         + 1.317e+03 * x^2)*0.000001"/>
           </force> -->
            <force name="box_curve">
             <comp dof="y" value="2"/>
           </force>
        </bcsAndLoads>

        <storeResults>
          <nodeResult type="mechDisplacement">
            <allRegions/>
          </nodeResult>
          <elemResult type="mechPseudoDensity">
            <allRegions/>
          </elemResult>
          <elemResult type="physicalPseudoDensity">
            <allRegions/>
          </elemResult>
          <elemResult type="optResult_1">
            <allRegions/>
          </elemResult>
        </storeResults>
      </mechanic>
    </pdeList>

   <linearSystems>
      <system>
        <solverList>
          <cholmod/>
        </solverList>
      </system>
    </linearSystems> 

  </sequenceStep>

  <optimization>
    <costFunction type="compliance" task="minimize" multiple_excitation="true">
      <!-- for snopt and ipopt better disable via comment, value="0" or queue="99" -->
      <stopping value="0.001" type="designChange" />
    </costFunction>

    <constraint type="volume" access="filtered" value=".2" bound="upperBound" mode="constraint" />
    <constraint type="volume" access="physical" mode="observation" />
    <constraint type="greyness" access="physical" mode="observation" />
    
    <!-- slope constraints are local constraints (approx. 4 constraints per element) -->
    <!-- <constraint type="slope" value=".3" bound="upperBound" mode="constraint" /> -->

    <optimizer type="ipopt" maxIterations="400">
      <!-- when use use another optimizer than snopt, the snopt element below is simply ignored --> 
      <snopt>
        <!-- value of 3 enables the gradient check of snopt -->
        <option name="verify_level" type="integer" value="-1"/>
      </snopt>
    </optimizer>

    <ersatzMaterial region="mech" material="mechanic" method="simp" >
      <!-- comment the filter when using slope constraints -->
      <filters>
        <filter neighborhood="maxEdge" value="1.1" type="density">
           <!-- the curious might want to play experiement with Heaviside filters :) -->
<!--            <density type="solid_heaviside" beta="2"/> -->
        </filter>
      </filters>

      <design name="density" initial=".5" physical_lower="1e-9" upper="1.0" />

      <!-- setting param to 1 results in VTS optimization, "simp" is power law rho^param --> 
      <transferFunction type="simp" application="mech" param="3"/>
      
      <!-- Writes the compliance gradient to the .cfs file -->
      <result value="costGradient" id="optResult_1"/>
      <export save="last" write="iteration"/>
    </ersatzMaterial>
    <!-- setting to a larger stride (e.g. 99) writes only every n-th iteration. -->
    <commit mode="each_forward" stride="1"/>
  </optimization>
</cfsSimulation>
